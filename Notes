https://net.cybbh.io/public/networking/latest/index.html
http://10.50.23.214:8000/    http://networking-ctfd-1.server.vta:8000/
osi model 7 layers = Application - SSH HTTTPS ect, Presentaton, Session - Connection, Transport - TCP & UDP, Network - How networks talk IPV4 IPV6 ICMP routing protocols, Data Link - Mac Address, Physical
PDU (Protocol Data Unit) Physical = Bit, Data Link = Frame, Network = Packet, Transport = Segment/Datagram, Session-Application = Data
iana is in charged of domain space and manages dns
ieee 
rfc (request for comment)
binary groupings are bit 1, nibble 4, byte 8, half word 16, word 32
base64 characters have a binary value associated to it a-z 0-9 + / = means known vakue
Topologies 
  Bus 
  Star all machines plugged into a center switch
  Ring Topology keeps going all mavhines connected in a ring
  Mesh is simaitar to star without a center swith there are partial mesh and full mesh where everybox is connected
  wireless is a topology with center being an ap 
  Hierarchial (used by most companies) access layer for users, distribution layer, core layer
Devices
  Hub put in info in one and broadcast info to all connected devices
  Repeater extands signal cable but degredation of quality may occur
  Switches can support different organizational units no ip needed uses mac addressing and can create vlans, creates cam table by reading source mac and adding it to its table and sends traffic to dest mac
  Routers have routing tables that is a collection of ipv4, ipv6 addresses
Ethernet Tming
  10 Mbps 100 ns
  100Mbps 10ns
  1 Gbps 1ns
  10 Gbps .1ns
  100 Gbps .01ns
Ethernet = 802.3(x) Wireless 802.11(x) Token Ring 802.5
Encapsulation and Decapsulation occurs with ip header
mac address is 48 bit | 6 B | 12 hex first 24 bits is oui anf last 24 is vendor specific, mac address do not transfer between routers
mac address type unicast 1 to 1 - 8th bit is off, multicast 1 to many 8th bit on, broadcast 1 to all all bits on
0x0800 = IPv4, 0x86DD = IPv6, 0x0806 = ARP, 0x8100 VLAN tag
for multiple vlan 0x88A8 ust be before 0x8100
Arp cache is dynamic and can last up to 20 mins and at minimum default gateway will be in arp cache
VLAN Trunking Protocol is proprietary to cisco
Dynamic Trunking Protocol cisco proprietary and is on by default
Cisco Discovery Protocol
Foundry Discovery Protocol
Link Layer Discovery Protocol
Spanning Tree Protocol 802.11D, Per VLAN Spanning TREE +, 802.1w Rapid Spanning Tree Protocol, Rapid Per VLAN Spanning Tree +, 802.1s Multiple Spanning Tree Protocol
Port Security modes are Shutdown(default), Protect, Restrict
BPDU(Bridge protocol Data Unit) is whats sent by bridge iot create root bridge used by dtp, vtp, stp, cdp, fdp to communicate

Offset value formula for fragmented packets (MTU-(IHL*4))/8
IHL are in length of words 32bits 
APIPA 169.254.0.0/16

types of vpn include remote access(client-to-site), site to site
ssh asymmetric or pki for key exchange, user key and host key are asymmetric while session key is symmetric
ssh known host database is in ~/.ssh/known_hosts
ssh config files /etc/ssh/ssh_config and /etc/ssh/sshd.config
HTTP 80 clear text no encryption
HTTPS 443 encrypted
both use user request mthods GET/HEAD/POST/PUT
DNS TCP/UDP 53 UDP is for queries and TCP is for zone transfer
  dns records are
  A - IPV$ record
  AAAA - IPV6 record
  MX - Mail Server record
  TXT - human readable text
  NS - Name Server record
  SOA - tart of Authority
DHCPV4
  DORA is the acronym
  Discorver (Broadcast)
  Offer(Unicast)
  Request(Broadcast)
  Acknowledge(Unicast)
DHCPv6
  SLAAC
  Solicit(Multicast)
  Advertise(Unicast)
  Request or Info Request(Multicast)
  Reply(Unicast)

Socket types include user space and kernel space
  user space ae stream socket (TCP) & datagram sockt (UDP)
  kernel space are raw sockets require elevated perms

Kernel space sockets you are attempting to modify the encapsulation of data
nc -lp # (tcp listening port) nc -lup # (udp listening port)
Encode text to hex
  echo "message" | xxd
Encode file to hex
  xxd file.txt file-encoded.txt
Decode filr from hex
  xxd -r file-encoded.tx file-decoded.txt
Python hex encoding
  import binascii
  message = b'Message'
  hidden_msg = binascii.hexlify(message)
Encode text to base64:
  echo "Message" | base64
Endode file to Base64:
  base64 file.txt > file-encoded.txt
Decode file from Base64:
  base64 -d file-encoded.txt > file-decoded.txt
Python Base64 Encoding
  import base64
  message = b'Message'
  hidden_msg = base64.b64encode(message)

Passsive external methods 
  osint and publicaly avail info

Active External
    Ping sweep
    for i in {1..254}; do (ping -c 1 172.16.82.$i | grep "bytes from" &) ; done
    
    Netcat - Horizontal Scanning
        Range of IPs for specific ports
        TCP
          for i in {1..254}; do nc -nvzw1 172.16.82.$i 20-23 80 2>&1 & done | grep -E 'succ|open'
        UDP
          for i in {1..254}; do nc -nuvzw1 172.16.82.$i 1000-2000 2>&1 & done | grep -E 'succ|open'
    
    Netcat - Vertical Scan   
        Range of ports on specific IP
        TCP
          nc -nzvw1 172.16.82.106 21-23 80 2>&1 | grep -E 'succ|open'
        UDP
          nc -nuzvw1 172.16.82.106 1000-2000 2>&1 | grep -E 'succ|open'
    
    Netcat - Banner Grabbing
     Find what is running on a particular port
        nc [Target IP] [Target Port]
        nc 172.16.82.106 22
        nc -u 172.16.82.106 53
        -u : To switch to UDP
    
    Curl and WGET
     Both can be used to interact with the HTTP, HTTPS and FTP protocols.
      Curl - Displays ASCII
      curl http://172.16.82.106
      curl ftp://172.16.82.106
      curl 172.16.82.106:80
    Wget - Downloads (-r recursive)
      wget -r http://172.16.82.106
      wget -r ftp://172.16.82.106
      wget 172.16.82.106
      wget 172.16.82.106:80

Passive Internal
    IP Configuration
    Windows: ipconfig /all
    Linux: ip address (ifconfig depreciated)
    VyOS: show interface
    
    DNS Configuration
    Windows: ipconfig /displaydns
    Linux: cat /etc/resolv.conf
    
    Arp Cache
    Windows: arp -a
    Linux: ip neighbor (arp -a depreciated)
    
    Network Connection
      Windows: netstat
      Linux: ss (netstat depreciated)
      Example options useful for both netstat and ss: -antp
      a = Displays all active connections and ports.
      n = No determination of protocol names. Shows 22 not SSH.
      t = Display only TCP connections.
      u = Display only UDP connections.
      p = Shows which processes are using which sockets.
      l = listening ports
    
    Services File
      Windows: %SystemRoot%\system32\drivers\etc\services
      Linux/Unix: /etc/services
    
    OS Info
      Windows: systeminfo
      Linux: uname -a and /etc/os-release
    
    Running Process
      Windows: tasklist
      Linux: ps or top
      Example options useful for ps: -elf
      e = Show all running processes
      l = Show long format view
      f = Show full format listing
    
    Command Path commands
      which <command>
      whereis <command>
    
    Routing Table
      Windows: route print
      Linux: ip route (netstat -r deprecated)
      VyOS: show ip route
      
    File Search
      find / -name hint* 2> /dev/null
      find / -iname flag* 2> /dev/null
    
    SSH Config
      Windows: C:\Windows\System32\OpenSSH\sshd_config
      Linux: /etc/ssh/sshd_config

Active Internal
    Arp Scanning
      arp-scan --interface=eth0 --localnet
      nmap -sP -PR 172.16.82.96/27

    Ping Scanning
      ping -c 1 172.16.82.106
      for i in {1..254}; do (ping -c 1 172.16.82.$i | grep "bytes from" &) ; done
      sudo nmap -sP 172.16.82.96/27
    
    Dev Tcp Banner Grab
      exec 3<>/dev/tcp/172.16.82.106/22; echo -e "" >&3; cat <&3

    Dev Tcp Scanning
      for p in {1..1023}; do(echo >/dev/tcp/172.16.82.106/$p) >/dev/null 2>&1 && echo "$p open"; done
    

















